#include "config.h"
#include <ESP32Servo.h>
Servo myservo;
ESP32PWM pwm;
/************************ Example Starts Here *******************************/

// this int will hold the current count for our sketch
int count = 0;
float temp = 0;
float tempC = 0;
int flag;
int dig[3];
// set up the 'counter' feed
AdafruitIO_Feed *Temperatura = io.feed("Temperatura");
AdafruitIO_Feed *TemperaturaReloj = io.feed("TemperaturaReloj");

void setup() {
  Serial.begin(9600);
  // start the serial connection
  // wait for serial monitor to open
  while (! Serial);

  Serial.print("Connecting to Adafruit IO");

  // connect to io.adafruit.com
  io.connect();

  // wait for a connection
  while (io.status() < AIO_CONNECTED) {
    Serial.print(".");
    delay(500);
  }

  // we are connected
  Serial.println();
  Serial.println(io.statusText());

  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(14, OUTPUT);
  pinMode(27, OUTPUT);//a
  pinMode(26, OUTPUT);//b
  pinMode(25, OUTPUT);//c
  pinMode(33, OUTPUT);//d
  pinMode(32, OUTPUT);//e
  pinMode(5, OUTPUT);//f
  pinMode(19, OUTPUT);//dot
  pinMode(18, OUTPUT);//g
  pinMode(21, OUTPUT);
  pinMode(22, OUTPUT);
  pinMode(23, OUTPUT);
  pinMode(34, INPUT_PULLUP);
  ESP32PWM::allocateTimer(0);
  ESP32PWM::allocateTimer(1);
  ESP32PWM::allocateTimer(2);
  ESP32PWM::allocateTimer(3);
  myservo.setPeriodHertz(50);// Standard 50hz servo
  dig[0] = 0;
  dig[1] = 0;
  dig[2] = 0;
  io.run();
  myservo.attach(2, 500, 2400);
  pwm.attachPin(4, 10000);
  myservo.write(0);
  delay(100);
  myservo.detach();
  pwm.detachPin(4);
}

void loop() {

  if (digitalRead(34) == LOW) {
    while (flag == 0) {
      if (digitalRead(34) == HIGH) {
        flag = 1;
      }
    }
    flag = 0;
    int temp;
    temp = analogRead(35);
    tempC = ((1.611328125) * temp) / 10;
    //Serial.println(temp);
    Serial.println(tempC);
    dig[0] = int(tempC / 10);
    dig[1] = int(tempC - dig[0] * 10);
    dig[2] = (tempC * 10) - (int(tempC) * 10);
    Serial.println(dig[2]);
    delay(20);
    myservo.attach(2, 500, 2400);
    pwm.attachPin(4, 10000);
    if (tempC < 37) {
      digitalWrite(13, HIGH);
      digitalWrite(12, LOW);
      digitalWrite(14, LOW);
      Serial.println(0);
      TemperaturaReloj->save(0);
      for (int i = 180; i >=0; i-=45) {
        myservo.attach(2, 500, 2400);
        pwm.attachPin(4, 10000);
        myservo.write(i);
        delay(100);
        myservo.detach();
        pwm.detachPin(4);
      }
    }
    else if (tempC > 37 && tempC < 37.5) {
      digitalWrite(13, LOW);
      digitalWrite(12, HIGH);
      digitalWrite(14, LOW);
      for (int i = 0; i <= 90; i+=45) {
        myservo.attach(2, 500, 2400);
        pwm.attachPin(4, 10000);
        myservo.write(i);
        delay(100);
        myservo.detach();
        pwm.detachPin(4);
      }

      Serial.println(90);
      TemperaturaReloj->save(90);

    }
    else if (tempC > 37.5) {
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(14, HIGH);
      for (int i = 0; i <= 180; i+=45) {
        myservo.attach(2, 500, 2400);
        pwm.attachPin(4, 10000);
        myservo.write(i);
        delay(100);
        myservo.detach();
        pwm.detachPin(4);
      }
      Serial.println(180);
      TemperaturaReloj->save(180);
    }

    Serial.print("sending -> ");
    Serial.println(tempC);
    Temperatura->save(tempC);


    // increment the count by 1
    count++;

    // Adafruit IO is rate limited for publishing, so a delay is required in
    // between feed->save events. In this example, we will wait three seconds
    // (1000 milliseconds == 1 second) during each loop.
    delay(10);

  }
  for (int i = 21; i <= 23; i++) {
    //Muestra unidades
    digitalWrite(19, HIGH);
    if (i == 23) {
      numeros(dig[0]);
    }
    else if (i == 21) {
      numeros(dig[1]);
    }
    else if (i == 22) {
      numeros(dig[2]);
    }
    digitalWrite(i, HIGH); //Enciende el display de unidades
    delay(1);               //Retardo de 1 milisegundos
    digitalWrite(i, LOW);  //Apaga el display de unidades
  }


}
void numeros(int valor) {
  switch (valor) {
    case 0:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, HIGH);//d
      digitalWrite(32, HIGH);//e
      digitalWrite(5, HIGH);//f
      digitalWrite(18, LOW);//g
      break;
    case 1:
      digitalWrite(26, HIGH);
      digitalWrite(25, HIGH);
      digitalWrite(27, LOW);
      digitalWrite(33, LOW);
      digitalWrite(32, LOW);
      digitalWrite(5, LOW);
      digitalWrite(18, LOW);
      break;
    case 2:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, LOW);//c
      digitalWrite(33, HIGH);//d
      digitalWrite(32, HIGH);//e
      digitalWrite(5, LOW);//f
      digitalWrite(18, HIGH);//g
      break;
    case 3:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, HIGH);//d
      digitalWrite(32, LOW);//e
      digitalWrite(5, LOW);//f
      digitalWrite(18, HIGH);//g
      break;
    case 4:
      digitalWrite(27, LOW);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, LOW);//d
      digitalWrite(32, LOW);//e
      digitalWrite(5, HIGH);//f
      digitalWrite(18, HIGH);//g
      break;
    case 5:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, LOW);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, HIGH);//d
      digitalWrite(32, LOW);//e
      digitalWrite(5, HIGH);//f
      digitalWrite(18, HIGH);//g
      break;
    case 6:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, LOW);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, HIGH);//d
      digitalWrite(32, HIGH);//e
      digitalWrite(5, HIGH);//f
      digitalWrite(18, HIGH);//g
      break;
    case 7:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, LOW);//d
      digitalWrite(32, LOW);//e
      digitalWrite(5, LOW);//f
      digitalWrite(18, LOW);//g
      break;
    case 8:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, HIGH);//d
      digitalWrite(32, HIGH);//e
      digitalWrite(5, HIGH);//f
      digitalWrite(18, HIGH);//g
      break;
    case 9:
      digitalWrite(27, HIGH);//a
      digitalWrite(26, HIGH);//b
      digitalWrite(25, HIGH);//c
      digitalWrite(33, LOW);//d
      digitalWrite(32, LOW);//e
      digitalWrite(5, HIGH);//f
      digitalWrite(18, HIGH);//g
      break;
  }

}
